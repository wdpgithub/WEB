HTML常用标签
文本标题:<h#></h#>(#:1-6)
字体及字符实体:倾斜标记<i></i>|<em></em>加粗标记<b></b>|<strong></strong>放大<big></big>缩小<small></small>删除<del></del>|<s></s>下划线标记<u></u>|<ins></ins>换行标记</br>水平线标记</hr><!--工作中水平线: 通过下边框实现! 不用hr!-->上标标记<sup></sup>下标标记<sub></sub>预格式化标记<pre></pre><!--预格式化标签,工作不使用!-->段落标记<p></p>注意: p中只能包含行文本级标签!!!不能放h标签				      
常用的字符实体:&nbsp:不换行空格&gt:右尖括号&lt:左尖括号&copy:备案中图标&quot双引号&reg商标
常用的元素:<div></div>   <span></sapn>         
超链接<a href="目标文件路径及全称/链接地址"alt="替换文本"title="提示文本">链接文本/图片</a> 空链接<a href="#"></a><!--  ../ 表示上层目录!!   ./表示当前目录默认都可省略!!   --><!--图片或超链接等路径问题!路径分: 绝对路径和相对路径!绝对路径: 带盘符C:/a.jpg   或  网络地址-->	
插入图像<img src="目标文件路径及全称"alt="图片替换文本"title="图片标题"/>
表格属性:width(宽)height(高)border(边框)bordercolor(边框色)cellspacing(外边距)cellpadding(内边距)align("表格对齐方式"left/right/center)valign("垂直对齐方		式"top/bottom/middle)colspan(所合并的单元格的列数)rowspan(所合并单元格的行数)  口诀：合并行: 合并为1行, 跨N个列,  列属性colspan。合并列: 合并为1列,跨N个行, 行属性:rowspan
表单属性:<form name="表单名称" method="post/get"action=""></form>get是用来从服务器上获得数据,而post是用来向服务器上传递数据。get/post的区别;get会在地址栏中明文显示数据！不安全。
表单控件:<input type="text(文本框)"value="默认值"/><input type="password(密码框)"/><input type="submit(提交框)"value="按钮内容"/><input type="reset(重置按钮)"value="按钮内容"/><input type="radio(单选框)"name=""/><input  type="checkbox(复选框)"name=""/> <input type="button(按钮)"value="按钮内容"><input type="不同类型" name="名字必须，传递数据依靠name属性”>隐藏域hidden：作用，悄悄的向后台传递数据。成对的button和image都有跳转功能。disabled="disabled/ture"/disable禁用 checkbox="checked/ture"/checkbox默认选中  maxlength字符的最大个数 readonly="readonly/ture"/checkbox只读
下拉菜单:<select><option></option></select>多行文本框:<textarea cols=""rows=""></textarea>说明:rows属性和cols属性用来设置文本输入窗口的高度和宽度,单位是字符.
表单的高级属性
	(1)表单字符集		语法:<fieldset></fieldset>说明:相当于一个方框,在字段集中可以包含文本和其它元素.该元素用于对表单中的元素进行分组并在文档区别标出文本.fieldset元素可以嵌套,在其内部可以设置多个fieldset对象。disable定义空间禁制可用。
	(2)字段级标题		语法：<legend></legend>说明：legend元素可以在field set对象绘制的方框内插入一个标题。legend元素必须是field set内第一个元素。
	(3)提示信息标签		语法：<label for="绑定控件id名"></label>说明：label元素用来定义标签，为页面上的其它元素指定提示信息。要将label元素绑定到其它的控件上，可以将label元素的for属性设置为与该控件的id属性值相同。
css基础
css样式表的建立
    1.内部样式表(嵌套在页面中)<style type="text/css">css语法<style>
    2.内联样式表(行间样式.行内样式.嵌入式样式)<标签 style="属性:属性值;"></标签>
    3.引用外部样式表文件<link rel="stylesheet"type="text/css"href="目标文件路径及全称"/>rel:用于定义文档关联,表关联样式表type:定义文档类型  css样式表的优先级		:内联样式表的优先级最高   内联样式表与外部样式表的优先级和相同选择器的话是离HTML最近的那个样式表优先级就越高
	css常用的选择符:标记选择器(element选择器)..ID选择符(id选择器)伪类选择器.群组选择器(集合选择器).通配符(*).伪对象选择器.包含选择器(后代选择器).类选择器(class选择符)选择器优先级:标记选择器<class选择器<ID选择器
文本类属性:
	font-family:字体类型   当字体是中文字体时,需加双引号,当英文字体中有空格时,需加双引号.当英文字体只有一个单词组成是不加双引号.
	font-size:文本大小    默认情况下,1em=16px,0.75em=12px 
	color:文本颜色  十六进制颜色模式:0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F
	font-weight（字体加粗）:  bolder(更粗)/bold(加粗)/normal(常规)/(100-900)
	font-style（字体倾斜 ）:   italic(倾斜)/oblique(更倾斜)/normal
	text-align（水平对齐）:    left(左)/right(右)/center(中)/justify(对内容两端边界线对齐显示)
	line-height（行高）（让行高等于其父元素的高度，那么它就会在父容器中垂直居中）
	text-decoration（文本修饰）:none(没有修饰)/unnderline(添加下划线)/overline(添加上划线)/line-through(添加删除线)
css核心属性
一.列表属性:
	list-style-type:disc(实心圆)/circle(空心圆)/square(实心方块)/none(去掉列表符号) list-style:none;(去掉列表样式)
	list-style-image;url(所使用图片的路径及全称)
	list-style-position:outside(外边)/inside(里边)
二.背景属性：
	1.语法：background-clip：border-box(背景被裁剪到边框盒)/padding-box(背景被裁剪到内边距框)/content-box(背景被裁剪到内容框)
	说明:在css2中,背景的显示范围是指内部补白的范围,不包括边框;而在css2.1乃至css3中,背景的显示范围是指包括边框在内的范围。在css3
	中，可以使用background-clip来修改背景的 显示范围，如果将background-clip的属性值设定为border，则背景范围包括边框，如果设定为padding，则不包括边框。
	2.语法：background-origin：border-box/padding-box/content-box
	说明:在绘制背景图像时,默认是从内部padding区域的左上角开始,但是可以利用background-origin属性来指定绘制时从边框的左上角的开始,或者从内容的左上角开始。
	3.语法：background-size：lenght(设置背景图像的高度和宽度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为"auto")/percentage(以父元素的百分比来设置背景图像的宽度和高度)/cover(把背景图像扩展至足够大,以使背景图像完全覆盖背景区域。背景图像的某些部分也许无法显示在背景定位区中。)/contain（把背景图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域。）
	4.在一个元素添加多张背景图片
	语法:div{background-image:url(背景图),url(背景图),url(背景图);background-repeat:no-repeat,repeat-x,repeat-y;background-position:3% 98%,center center,right top;width:300px;}说明:第一个定义的把背景图片在最上面,最后定义在最下面。使用background-repeat和background-position可以单独制定背景中某个文件的平铺方式与放置的位置。
	5.background-color（背景颜色）6.background-image(背景图片):url(背景图片的路径及全称)7.background-repeat（背景图片的平铺属性）：no-repeat（不平铺）/repeat(平铺)/repeat-x(横向平铺)/repeat-y(纵向平铺)
	8.background-position:背景图片的位置属性(值1  值2)
	说明:值1:水平方向上的对齐方式(left/center/right)或值
	  值2:垂直方向上的对齐方式(top/center/bottom)或值
	背景属性的缩写:background:#背景色  url(背景图片的路径及全称)  no-repeat   center    top
盒模型和文本溢出
一.盒模型:
	css盒子都具备的属性:内容(content)、填充（padding）、边框（border)、边界（margin）
	border的使用方法:边框宽度  边框样式 边框颜色
	border-width:边框宽度  border-color:边框颜色   border-style:solid(实线)/dashed(虚线)/dotted(点划线)/double(双线)
二.文本溢出
	1.overflow:visible(默认值,内容不会被修剪,会出现在元素框之外)/hidden(内容会被修剪,并且其余内容是不可见的)/scroll(内容会被修剪,但是浏览器会显示滚动条,以便查看其余的内容)/auto(如果内容被修剪,则浏览器会显示滚动条,以便查看其他的内容)/inherit(规定应该从父元素继承overflow属性的值)
	2.white-space（设置如何处理元素内的空白）:normal(默认,空白会被浏览器忽略)/pre(空白会被浏览器保留)/nowrap(文本不会换行,文本会在同一行上继续,直到遇到<br>标签为止)/pre-wrap(保留空白符序列,但是正常地进行换行)/pre-line(合并空白符序列,但是保留换行符)/inherit(规定应该从父元素继承white-space属性的值)
	3.text-overflow（规定当文本溢出包含元素时发生的事情）:clip(不显示省略号,而是简单的裁切)/ellipsis(当对象内文本溢出时,显示省略号标记)
	说明:要实现溢出时产生省略号的效果还需定义
	（1）.容器宽度:width:value;(px %,都可以)
	（2）.强制文本在一行内显示:white-space;nowrap;
	（3）.溢出内容为隐藏:overflow:hidden;
	（4）.溢出文本显示省略号:text-overflow:ellipsis;
元素类型:
	根据css显示分类,xhtml元素被分为三种类型:块状元素(block element)/行内元素(lnline element )/可变元素
	常用的块状元素包括div,dl-和dd-dt搭配使用的块级元素，ol,ul,fielset（表单字符集）,(h1-h6),p（段落）,form（交互表单）,hr（水平分隔线）,iframe,colgroup-col（表单列分组元素）,table-td-tr（表单及行-单元格）,等
	常用的行内元素：a，span，i，em（强调），strong，b，textarea（多文本输入框）等
	可变元素需要根据上下文关系确定该元素是块元素或者行内元素:applet-java applet/button-按钮/del-删除文本/ins-插入的文本/iframe-inline frame/map-图片区块(map)/object-object对象/script-客户端脚本
	display:none/inline(行)/block(块)/inline-block(行内块)/list-item(变成列表属性)
	当元素设置了float属性后,就相当于给改元素家了display:block;属性
	position（定位）：static(默认值)/absolute(绝对定位)/relative(相对定位)/fixed(固定定位)
锚点链接:是网页制作中超级链接的一种, 又叫命名锚记.设置锚点链接的方法1.给元素定义命名锚记名 :<标签  id="命名锚记名"></标签>2.命名锚记链接:<a href="#命名锚记名	称"></a>
css3的选择器:一.属性选择器二.伪类选择器三.层级选择器
一.属性选择器
	1.E(标签)[att(条件属性)] {sRules(css的声明)}:用于选取带有指定属性的元素2.E[att="val(属性值)"]{sRules}:用于选取带有指定属性和值的元素3.E[att~="val"]{sRules}:用于选取属性值中包含指定词汇的元素4.E[att|="val(例如a,等.取名时要用-隔开)"]{sRules}:用于选取带有指定值开头的属性的元素,该值必须是整个单词5.E[att^="val"]{sRules}:匹配属性值以指定值开头的每个元素6.E[att$="val"]{sRules}:匹配属性值以指定值结尾的每个元素7.E[att*="val"]{sRules}:匹配属性值中包含指定值的每个元素。
二.结构性伪类选择器
	1.:first-child与:last-child:单独指定第一个子元素和最后一个子元素的样式2.:nth-child与:nth-last-child:对指定序号的值元素使用样式3.循环使用样式::nth-		child(an+&)与:nth--last-child(an+&),an+&形式,a表示每次循环中共包括几种样式,&表示指定的样式在循环中所处的位置。4.:only-child:只有一个元素的时候使用。
	对所有第奇数个子元素或第偶数个子元素使用样式:
	1.:nth-child(odd){}//所有正数下第奇数个子元素2.:nth-child(even){}//所有正数下第偶数个子元素3.:nth-last-child(odd)//所有倒数上第奇数个子元素4.:nth-last-child(even)//所有倒数上第偶数个子元素4.:nth-of-type与:nth-last-of-type:使用这两种选择器时, css3在计算子元素是第奇数个子元素还是第偶数个子元素的时候,就只针对同类型的子元素进行计算了.
	2.目标伪类选择器：:target:突出显示活动的HTML锚
	URL带有后面跟有锚名称#,指向文档内某个具体的元素。这个链接的元素就是目标元素(target element)。:target选择器可用于选取当前活动的目标元素。使用该选择器来对页面中的某个target元素(该元素的id当做页面中的链接来使用)指定样式,该样式只在用户点击了页面中的超链接,并且跳转到target元素后起作用。
三.层级选择器
	1.E>F{sRules}说明:子元素选择器(Child selectors)只能选择作为某个元素子元素的元素,选择匹配的F元素,且匹配的F元素为所匹配的E元素的子元素。2.E+F{sRules}说明:相邻兄弟选择器可以选择紧接在另一个元素后的元素,而且它们具有一个相同的父元素,EF两元素具有一个相同的父元素,而且F元素在E元素后面,而且相邻。3.E~F{sRules}说明:用来指定于同意个父元素之中的某个元素之后的所有其他某个种类的兄弟元素所使用的样式。选择器某元素后面的所有兄弟元素,需要在同一个父元素之中,E和F元素是属于同一父元素之内,并且F元素在E元素之后,那么E~F选择器将选择中所有E元素后面的F元素。
	一些常用的浏览器前缀，主要是为了兼容浏览器，其中-moz 指火狐，-ms 指 IE，-webkit 指谷歌， -o 指 Opera
大纲:
一.服务器端字体
	语法：@font-face{font-family:WebFont;src:url("字体文件")format("字体文件格式")}div{font-family:WebFont;}
	WebFont用来声明使用服务器的字体。format用来声明字体文件的格式，可以省略文件格式的声明而单独使用src属性值。字体文件的格式有Opentype与truetype，前者属性值为opentype，后者的属性值为truetype；前者的文件扩展名为.otp,后者的为.ttp。
二.iconfont
	iconfont是用字体文件取代图片文件，来展示图标、特殊字体等元素的方法。优缺点：体积小，可维护性（因为是矢量，所以拉伸不变形；颜色可以自行更换，支持一些css3对字体的效果。
三.边框属性
	语法:border-radius(圆角边框)说明: border-radius:左上角 右上角  右下角  左下角border-radius:左上角右下角  右上角左下角(对角线)
	border-top-right-radius:右上角border-bottom-left-radius:左下角
	语法:border-image:url("url")A B C D/border-image-width border-image-repeat说明:让处于随时变化状态的元素的长或宽的边框统一使用一个图像文件来绘制。第一个参数作为边框使用图像的路径，A B C D表示当浏览器自动把边框所使用到图像进行分隔时的上边距，右边距，下边距，左边距，四个边距相同时可以缩写成一个，不需要单位。border-width：表示边框的宽度border-image-repeat：表示图像边框是否应平铺（repeat）、铺满（round）或拉伸（strech）。
四.盒阴影
	语法:box-shadow:h-shadow v-shadow blur spread color inset说明:让盒子显示时产生阴影效果。h-shadow：水平阴影的位置。允许负值。v-shadow：垂直阴影的位置。允许负值。blur：模糊距离。spread：阴影的尺寸。color:阴影的颜色。inset：将外部阴影（outset）改为内部阴影。
五.2D效果
	1.css3过渡
		要实现这一点,必须规定两项内容:(1)规定希望添加到那个css属性上(2)规定效果的时长
		转换属性:transition(简写属性,用于在一个属性设置四个过渡属性。)
		（1）.transition-property（规定应用过渡的css属性的名称）:none(没有属性会获得过渡效果)/all(所有属性将获得过渡属性效果)/property(定义应用过渡效果的css属性名称列表,以逗号隔开)；
		（2）.transition-duration（定义过渡效果花费的时间。默认是0。）
		（3）.transition-timing-function（规定过渡效果的时间曲线。默认是"ease"。）:linear(规定以相同速度开始至结束的过渡效果)/ease(规定慢速开始,然后变快,然后慢速结束的过渡效果)/ease-in(规定以慢速开始的过渡效果)/eaes-out(规定以慢速结束的过渡效果)/ease-in-out(规定以慢速开始和结束的过渡效果)/cubic-bezier(n,n,n,n)(在cubic-bezier函数中定义自己的值。可能的值是0至1之间的数值);
		（4）.transition-delay(规定过渡效果何时开始。默认是0。)
	2.2D变形
		在css3中transform主要包括以下几种：旋转（rotate单位为deg）扭曲（skew(x,y单位为deg)）缩放（scale(x,y基数为1）移动（translate（x,y））以及矩阵变形（matrix）。transform-origin(定义旋转的原点(x,y(left top right bottom还可以是百分值,em,px,)默认点是元素的中心点)
六.3D效果
	(1)语法:transform-style:flat（子元素将不保留其3D位置）/preserve-3d（子元素将保留其3D位置）说明:规定如何在3D空间中呈现被嵌套的元素。
	perspctive属性：透视，视角
	(2)语法：perspctive（定义3D元素距视图的距离，以像素为单位）：number/none；一般800px至1200px左右，perspective取值为none或不设置，就没有真3D空间。perspective越小，3D效果越明显，perspective的值越大，或取值为0时与取值为none效果一样。perspective可以写在画布（父元素）上，也可以直接写在元素本身上，对于一张画布只有一个变形体的时候，几乎没有差别。但是一张画布上有多个变形体的时候两种写法就看出来了。
	(3)语法:preserve-origin(改变3D元素的底部位置)：x（相对于元素的包含框的X轴上的位置），y（相对于元素的包含框Y轴上的位置）；该属性默认值为"50%, 50%"(也就是center)。它可以是长度值（以受支持的长度单位表示）、百分比或以下三个关键词之一：left（表示在包含框的X轴方向长度的0%），center（表示中间点），或right（表示长度的100%）。
	(4)语法：backface-visibility:visible（为backface-visibility的默认值，表示反面可见）/hidden（表示反面不可见）;说明：定义当元素不面向屏幕时是否可见。如果在旋转元素不希望看到其背面时，该元素很有用。
css3动画：
	第一种叫过渡（transition）动画，就是从初始状态过渡到结束状态这个过程中所产生的动画。所谓的状态就是指大小、位置、颜色、变形（transform）等属性。css过渡只能定义首和尾两个状态，所以是最简单的一种动画。
	第二种叫做关键帧（keyframes）动画。不同于第一种的过渡动画只能定义首尾两个状态，关键帧动画可以定义多个状态。
	语法：@keyframes animationname{keyframe-selector{css-styles;}}说明:animationname:声明动画的名称。keyframes-selector;用于划分动画的时长，可以使用百分比形式，也可以使用“from”和“to”的形式。“from”和“to”的形式等同于“0%”和“100%”。建议始终使用百分比形式。
	@keyframes规定和所有动画属性：animation(所有动画属性的简写属性，除了animation-play-state属性)。
	（1）animation-name（规定@keyframes动画的名称）（2）animation-duration（规定动画完成一个周期所花费的秒或毫秒。默认为0。）（3）animation-timing-	funtion（规定规定动画的速度曲线）（4）animation-delay（规定动画何时开始。默认是0。）（5）animation-iteration-count（规定动画被播放的次数。默认为1。）：n（定义动画播放次数的数值）/Infinite（规定动画应该无限次播放）。
	语法：animation-play-state（规定动画正在进行还是暂停。注释：可以在JAVAscript中使用该属性）：paused（规定动画已暂停）/running（规定动画正在播放）
七.弹性盒
	弹性盒子是css3的一种新的布局模式。css3（Flexible box或flexbox），是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。引入弹性盒布局模型的目的时提供一种更有效的方式来对一种容器中的子元素进行排列、对齐盒分配空白空间。弹性盒子由弹性容器（Flex container）和弹性子元素（flex item）组成。弹性容器通过设置display属性的值为flex将其定义为弹性容器。弹性容器内包含了一个或多个弹性子元素。
	主轴（main axis）：伸缩容器的主轴，伸缩项目主要沿着这条轴进行排列布局。小心，它不一定是水平的；这主要取决于“justify-content”属性。主轴起点（main-start）和主轴终点（main-end）：伸缩项目放置在伸缩容器内从主轴起点（main-start）向主轴终点（main-end）方向。主轴的尺寸（main size）：伸缩项目在主轴方向的宽度或高度就是主轴的尺寸。伸缩项目的大小属性要么是宽度，要么是高度，由哪一个对着主轴方向决定。
	侧轴（cross axis）：垂直于主轴称为侧轴。它的方向主要取决于主轴方向。侧轴起点（cross-start）和侧轴终点（cross-end）：伸缩行的配置从容器的侧轴起点边开始，往侧轴终点边结束。侧轴的尺寸（cross size）：伸缩项目在侧轴方向的宽度或高度就是项目的侧轴长度。伸缩项目的侧轴长度属性是（width）或（height）属性，由哪一个对着侧轴方向决定。
	由于flexbox是一个整体模块，而不是单一的一个属性，它涉及到了很多东西，包括它的整个属性集。它们之中有一些是在父容器上设置，而有一些则是在子容器上设置。

	以下属性设在容器（父元素）上：display/flex-direction/flex-wrap/flex-flow/justify-content/align-item/align-content。
	(1)语法：display：flex（将对象作为弹性伸缩盒显示）/inline-flex（将对象作为内联块级弹性伸缩盒显示）；说明：弹性容器通过设置display属性的值为flex或inlineflex将其定义为弹性容器。
	(2)语法flex-direction:row（默认位置，主轴横向，起点在左侧，终点在右侧。）/row-reverse（主轴横向反转，起点在右侧，终点在左侧。）/column（主轴纵向，起点在右侧，终点在下方）/column-reverse（主轴纵向反转，起点在下方，终点在上方）；说明：设置伸缩盒主轴的起点和终点位置，子元素依然按照从主轴起点向终点方向排列。
	(3)语法：flex-wrap（需要缩小浏览器看换行效果）:nowrap（当子元素溢出父容器时不换行）/wrap（当子元素溢出父容器时自动换行）/wrap-reverse（反转wrap排列）;说明：设置或检索伸缩对象的子元素超出父容器时是否换行。
	(4)语法：justify-content：flex-start（弹性盒子元素将向行起始位置对齐）/flex-end（弹性盒子元素将向行结束位置对齐）/center（弹性盒子元素将向行中间位置对齐）/space-between（弹性盒子元素会平均地分布在行里）/space-around（弹性盒子元素会平均地分布在行里，两端保留子元素于子元素之间间距大小的一半）;说明：设置或检索弹性盒子元素在主轴上的对齐方式。当弹性盒粒一行上的所有子元素都不能伸缩或已经达到其最大值时，这一属性可协助对多余的空间进行分配。当	元素溢出某行时，这一属性同样会在对齐上进行控制。
	(5)语法：align-item：flex-start（弹性盒子元素的侧轴起始位置的边界紧靠住该行的侧轴起始边界）/flex-end（弹性盒子元素的侧轴起始位置的边界紧靠住该行的侧轴结束边界）/center（弹性盒子元素在该行的侧轴上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度））/baseline（将文字对齐）/stretch（默认值）（如果未设置宽高，那么将元素默认拉伸为父元素高度）;说明：设置或检索弹性盒子元素在侧轴的方向的对齐方式。
	(6)语法：align-content（需要缩小浏览器看换行效果）：flex-start（各行向弹性盒容器的起始位置堆叠）/flex-end（各行向弹性盒容器的结束位置堆叠）/center（各行向弹性盒容器的中间位置堆叠）/space-between（各行在弹性盒容器中平均分布）/space-around（各行在弹性盒容器中平均分布，两端保留子元素与子元素之间	间距大小的一半）/stretch（默认值）（各行将会伸展以占用剩余的空间）;说明;用于修改flex-wrap属性行为。类似于justify-content，但它不是设置弹性子元素的对齐，而是设置个行的对齐。

	以下子元素设在内部元素上：flex-grow/flex-srink/flex-basis/flex/order/align-self。
	(1)语法：flex-grow:<number>(default 0);说明：设置或检索弹性盒的扩展比率。根据弹性盒子元素所设置的扩展因子作为比率来分配剩余空间。<number>:用数值来定义扩展比率。不允许负值flex-grow的默认为0，如果没有显示定义该属性，是不会拥有分配剩余空间权利的。
	(2)语法:flex-shrink：<number>(default 1);说明：设置或检索弹性盒的收缩比率（根据弹性盒子元素所设置的收缩因子作为比率来收缩空间。）flex-shrink的默认值为1，如果没有显示定义该元素，将会自动按照默认值1在所有因子相加之后计算比率来进行空间收缩。
	(3)语法：flex-basis：<lenght>|auto(default auto);说明：设置或检索弹性盒默认基准值。auto：无特定宽度值，取决于其他属性。<length>:用长度值来定义宽度。不允许负值。语法：flex：none|[flex-grow]||[flex-shrink]||[flex-basis];说明复合属性。设置或检索伸缩盒对象的子元素日和分配空间。建议使用这个属性，而不是单独写三个分离属性，因为浏览会推算相关值。flex用于合并指定flex-grow和flex-shrink和flex-basis属性，默认值为0 1 auto。如果缩写flex：1，则其计算值为;1 1 0,auto等价于1 1 auto，none等价于0 0 auto。
	(4)语法：order：<integer>;说明：设置或检索弹性盒模型对象的子元素出现的顺序。<integer>:用整数值来定义排列顺序，数值小的排在最前面。可以为负值。
	(5)语法：align-self：auto|flex-start|flex-end|center|baseline|stretch;说明;设置弹性元素用来自身在侧轴方向上的对齐方式。auto：如果'align-self'的值			为'auto'，则其计算值为元素的父元素的'align-items'值，如果其没有父元素，则计算为'stretch'。flex-start：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住		该行的侧轴起始边界。flex-end：弹性盒子元素的侧轴侧轴起始位置的边界紧靠住该行的侧轴结束边界。center：弹性盒子元素在该行的侧轴（纵轴）上居中放置。（	如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。baseline：如弹性盒子元素的行内轴于侧轴为同一条，则该值与'flex-start'等效。其它情况下，该值将参与基线对齐。stretch：（默认值）如果指定侧轴大小的属性值为'auto',则其值会使用项目的边距盒的尺寸尽可能可能接近所在行的尺寸，但同时会遵照'min/max-width/height'属性的限制。

